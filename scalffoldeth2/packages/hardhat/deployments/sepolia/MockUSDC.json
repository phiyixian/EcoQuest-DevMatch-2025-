{
  "address": "0x87A112538420C9FcC183707488d065cB8e16Cc3c",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_initialSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x62d9603b6d7c4f6e62f97f15fc742aa032ca9e9702719a898c36677274d19814",
  "receipt": {
    "to": null,
    "from": "0x2878e154820a6A6AE190109036266b02bA46DE05",
    "contractAddress": "0x87A112538420C9FcC183707488d065cB8e16Cc3c",
    "transactionIndex": 220,
    "gasUsed": "562134",
    "logsBloom": "0x0000000000002000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a000000020000000000000000000000000000000000000000220000000000000000000800000000000008000000000010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2bbd8ffd078f9c3f34d2c20cae7918a015185ebe400653faf382166111d46589",
    "transactionHash": "0x62d9603b6d7c4f6e62f97f15fc742aa032ca9e9702719a898c36677274d19814",
    "logs": [
      {
        "transactionIndex": 220,
        "blockNumber": 8951243,
        "transactionHash": "0x62d9603b6d7c4f6e62f97f15fc742aa032ca9e9702719a898c36677274d19814",
        "address": "0x87A112538420C9FcC183707488d065cB8e16Cc3c",
        "topics": [
          "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002878e154820a6a6ae190109036266b02ba46de05"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000000e8d4a51000",
        "logIndex": 4424,
        "blockHash": "0x2bbd8ffd078f9c3f34d2c20cae7918a015185ebe400653faf382166111d46589"
      }
    ],
    "blockNumber": 8951243,
    "cumulativeGasUsed": "58956175",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "1000000000000"
  ],
  "numDeployments": 2,
  "solcInputHash": "496b2371263bb80f5e1277e0675ff2b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockUSDC - Simple ERC20 Token for Testing\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MockUSDC.sol\":\"MockUSDC\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MockUSDC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*Frontend tip:\\n    Can make the user experience smoother by:\\n    1. User only input donation amount once (not in both approve() and offset()\\n            Asking the user for the donation amount once,\\n            Then, in your frontend code, call approve(spender, amount) and\\n            offset(amount) with the same value.\\n    2. User nonid to input klimadao_contract address\\n            Hardcode or configure the KlimadaoDonation contract address in your frontend code \\n            (for example, in a config file or as a constant).*/\\n\\n/// @title MockUSDC - Simple ERC20 Token for Testing\\ncontract MockUSDC {\\n    string public name = \\\"Mock USDC\\\";\\n    string public symbol = \\\"mUSDC\\\";\\n    uint8 public decimals = 6;\\n    uint256 public totalSupply;\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    constructor(uint256 _initialSupply) {\\n        totalSupply = _initialSupply;\\n        balanceOf[msg.sender] = _initialSupply;\\n        emit Transfer(address(0), msg.sender, _initialSupply);\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool) {\\n        require(balanceOf[from] >= amount, \\\"Insufficient balance\\\");\\n        require(allowance[from][msg.sender] >= amount, \\\"Allowance exceeded\\\");\\n        balanceOf[from] -= amount;\\n        balanceOf[to] += amount;\\n        allowance[from][msg.sender] -= amount;\\n        emit Transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // Add a transfer function for completeness (optional but standard)\\n    function transfer(address to, uint256 amount) external returns (bool) {\\n        require(balanceOf[msg.sender] >= amount, \\\"Insufficient balance\\\");\\n        balanceOf[msg.sender] -= amount;\\n        balanceOf[to] += amount;\\n        emit Transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x3f95b30a63903d81026f041fa8433f3a4bf6b4d3b610f09925f59d9de8f5eb4e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c060405260096080908152684d6f636b205553444360b81b60a0526000906100289082610179565b506040805180820190915260058152646d5553444360d81b60208201526001906100529082610179565b506002805460ff1916600617905534801561006c57600080fd5b5060405161095c38038061095c83398101604081905261008b91610238565b6003819055336000818152600460209081526040808320859055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a350610251565b634e487b7160e01b600052604160045260246000fd5b600181811c9082168061010457607f821691505b60208210810361012457634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561017457600081815260208120601f850160051c810160208610156101515750805b601f850160051c820191505b818110156101705782815560010161015d565b5050505b505050565b81516001600160401b03811115610192576101926100da565b6101a6816101a084546100f0565b8461012a565b602080601f8311600181146101db57600084156101c35750858301515b600019600386901b1c1916600185901b178555610170565b600085815260208120601f198616915b8281101561020a578886015182559484019460019091019084016101eb565b50858210156102285787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60006020828403121561024a57600080fd5b5051919050565b6106fc806102606000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461012257806395d89b4114610142578063a9059cbb1461014a578063dd62ed3e1461015d57600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610188565b6040516100ad919061052b565b60405180910390f35b6100c96100c4366004610595565b610216565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe3660046105bf565b610283565b6002546101109060ff1681565b60405160ff90911681526020016100ad565b6100e26101303660046105fb565b60046020526000908152604090205481565b6100a061043a565b6100c9610158366004610595565b610447565b6100e261016b36600461061d565b600560209081526000928352604080842090915290825290205481565b6000805461019590610650565b80601f01602080910402602001604051908101604052809291908181526020018280546101c190610650565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102719086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156102e75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260056020908152604080832033845290915290205482111561034f5760405162461bcd60e51b8152602060048201526012602482015271105b1b1bddd85b98d948195e18d95959195960721b60448201526064016102de565b6001600160a01b038416600090815260046020526040812080548492906103779084906106a0565b90915550506001600160a01b038316600090815260046020526040812080548492906103a49084906106b3565b90915550506001600160a01b0384166000908152600560209081526040808320338452909152812080548492906103dc9084906106a0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161042891815260200190565b60405180910390a35060019392505050565b6001805461019590610650565b3360009081526004602052604081205482111561049d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102de565b33600090815260046020526040812080548492906104bc9084906106a0565b90915550506001600160a01b038316600090815260046020526040812080548492906104e99084906106b3565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610271565b600060208083528351808285015260005b818110156105585785810183015185820160400152820161053c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461059057600080fd5b919050565b600080604083850312156105a857600080fd5b6105b183610579565b946020939093013593505050565b6000806000606084860312156105d457600080fd5b6105dd84610579565b92506105eb60208501610579565b9150604084013590509250925092565b60006020828403121561060d57600080fd5b61061682610579565b9392505050565b6000806040838503121561063057600080fd5b61063983610579565b915061064760208401610579565b90509250929050565b600181811c9082168061066457607f821691505b60208210810361068457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561027d5761027d61068a565b8082018082111561027d5761027d61068a56fea26469706673582212209cbdcf165c488e6e9e3e1eb5ba8d1922b16c031c07822d656a5c3d9d927304ee64736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063313ce56711610066578063313ce5671461010357806370a082311461012257806395d89b4114610142578063a9059cbb1461014a578063dd62ed3e1461015d57600080fd5b806306fdde0314610098578063095ea7b3146100b657806318160ddd146100d957806323b872dd146100f0575b600080fd5b6100a0610188565b6040516100ad919061052b565b60405180910390f35b6100c96100c4366004610595565b610216565b60405190151581526020016100ad565b6100e260035481565b6040519081526020016100ad565b6100c96100fe3660046105bf565b610283565b6002546101109060ff1681565b60405160ff90911681526020016100ad565b6100e26101303660046105fb565b60046020526000908152604090205481565b6100a061043a565b6100c9610158366004610595565b610447565b6100e261016b36600461061d565b600560209081526000928352604080842090915290825290205481565b6000805461019590610650565b80601f01602080910402602001604051908101604052809291908181526020018280546101c190610650565b801561020e5780601f106101e35761010080835404028352916020019161020e565b820191906000526020600020905b8154815290600101906020018083116101f157829003601f168201915b505050505081565b3360008181526005602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906102719086815260200190565b60405180910390a35060015b92915050565b6001600160a01b0383166000908152600460205260408120548211156102e75760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064015b60405180910390fd5b6001600160a01b038416600090815260056020908152604080832033845290915290205482111561034f5760405162461bcd60e51b8152602060048201526012602482015271105b1b1bddd85b98d948195e18d95959195960721b60448201526064016102de565b6001600160a01b038416600090815260046020526040812080548492906103779084906106a0565b90915550506001600160a01b038316600090815260046020526040812080548492906103a49084906106b3565b90915550506001600160a01b0384166000908152600560209081526040808320338452909152812080548492906103dc9084906106a0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161042891815260200190565b60405180910390a35060019392505050565b6001805461019590610650565b3360009081526004602052604081205482111561049d5760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016102de565b33600090815260046020526040812080548492906104bc9084906106a0565b90915550506001600160a01b038316600090815260046020526040812080548492906104e99084906106b3565b90915550506040518281526001600160a01b0384169033907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610271565b600060208083528351808285015260005b818110156105585785810183015185820160400152820161053c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461059057600080fd5b919050565b600080604083850312156105a857600080fd5b6105b183610579565b946020939093013593505050565b6000806000606084860312156105d457600080fd5b6105dd84610579565b92506105eb60208501610579565b9150604084013590509250925092565b60006020828403121561060d57600080fd5b61061682610579565b9392505050565b6000806040838503121561063057600080fd5b61063983610579565b915061064760208401610579565b90509250929050565b600181811c9082168061066457607f821691505b60208210810361068457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561027d5761027d61068a565b8082018082111561027d5761027d61068a56fea26469706673582212209cbdcf165c488e6e9e3e1eb5ba8d1922b16c031c07822d656a5c3d9d927304ee64736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "title": "MockUSDC - Simple ERC20 Token for Testing",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5474,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "name",
        "offset": 0,
        "slot": "0",
        "type": "t_string_storage"
      },
      {
        "astId": 5477,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "symbol",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 5480,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "decimals",
        "offset": 0,
        "slot": "2",
        "type": "t_uint8"
      },
      {
        "astId": 5482,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "totalSupply",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 5486,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "balanceOf",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 5492,
        "contract": "contracts/MockUSDC.sol:MockUSDC",
        "label": "allowance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}