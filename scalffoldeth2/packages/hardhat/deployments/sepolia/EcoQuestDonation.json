{
  "address": "0x10A079E5a7ca818328ea7a54845a7E13f76C3f40",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_klimadao",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "co2Offset",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "DonationReceived",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "donations",
      "outputs": [
        {
          "internalType": "address",
          "name": "donor",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "co2Offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "donationId",
          "type": "uint256"
        }
      ],
      "name": "getDonation",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "donor",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "co2Offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct EcoQuestDonation.Donation",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTotalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "getUserStats",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "totalDonated",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "totalCO2Offset",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "donationCount",
              "type": "uint256"
            }
          ],
          "internalType": "struct EcoQuestDonation.UserStats",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "klimadao",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "co2Offset",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "offset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalCO2Offset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDonations",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdcToken",
      "outputs": [
        {
          "internalType": "contract MockUSDC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "userStats",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "totalDonated",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalCO2Offset",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "donationCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x58b27271ac9c445b5041f8c48db556d0776c94eede05cde974311823ee99812c",
  "receipt": {
    "to": null,
    "from": "0x2878e154820a6A6AE190109036266b02bA46DE05",
    "contractAddress": "0x10A079E5a7ca818328ea7a54845a7E13f76C3f40",
    "transactionIndex": 163,
    "gasUsed": "737451",
    "logsBloom": "0x
    "blockHash": "0x72584379ab0e7d485d32322013ec042b671c64dda89440ea2eee0b7f56fa8e19",
    "transactionHash": "0x58b27271ac9c445b5041f8c48db556d0776c94eede05cde974311823ee99812c",
    "logs": [],
    "blockNumber": 8951291,
    "cumulativeGasUsed": "15768586",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x87A112538420C9FcC183707488d065cB8e16Cc3c",
    "0x0000000000000000000000000000000000000002"
  ],
  "numDeployments": 3,
  "solcInputHash": "496b2371263bb80f5e1277e0675ff2b1",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_klimadao\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"co2Offset\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"DonationReceived\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"co2Offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"donationId\",\"type\":\"uint256\"}],\"name\":\"getDonation\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"donor\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"co2Offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct EcoQuestDonation.Donation\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserStats\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"totalDonated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCO2Offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationCount\",\"type\":\"uint256\"}],\"internalType\":\"struct EcoQuestDonation.UserStats\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"klimadao\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"co2Offset\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"offset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalCO2Offset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDonations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcToken\",\"outputs\":[{\"internalType\":\"contract MockUSDC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userStats\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalDonated\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalCO2Offset\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages carbon offset donations and tracking\",\"kind\":\"dev\",\"methods\":{},\"title\":\"EcoQuestDonation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/EcoQuestDonation.sol\":\"EcoQuestDonation\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/EcoQuestDonation.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.20;\\n\\nimport \\\"./MockUSDC.sol\\\";\\n\\n/**\\n * @title EcoQuestDonation\\n * @dev Manages carbon offset donations and tracking\\n */\\ncontract EcoQuestDonation {\\n    MockUSDC public usdcToken;\\n    address public klimadao;\\n\\n    // Total donations received\\n    uint256 public totalDonations;\\n\\n    // Total CO2 offset (in kg)\\n    uint256 public totalCO2Offset;\\n\\n    // Donation struct\\n    struct Donation {\\n        address donor;\\n        uint256 amount;\\n        uint256 co2Offset;\\n        uint256 timestamp;\\n        string message;\\n    }\\n\\n    // User stats\\n    struct UserStats {\\n        uint256 totalDonated;\\n        uint256 totalCO2Offset;\\n        uint256 donationCount;\\n    }\\n\\n    // Events\\n    event DonationReceived(address indexed donor, uint256 amount, uint256 co2Offset, string message);\\n\\n    //\\n\\n    // Mappings\\n    mapping(address => UserStats) public userStats;\\n    mapping(uint256 => Donation) public donations;\\n    uint256 private _donationIds;\\n\\n    constructor(address _usdcToken, address _klimadao) {\\n        usdcToken = MockUSDC(_usdcToken);\\n        klimadao = _klimadao;\\n    }\\n\\n    function offset(uint256 amount, uint256 co2Offset, string memory message) external {\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\n        require(co2Offset > 0, \\\"CO2 offset must be greater than 0\\\");\\n        bool success = usdcToken.transferFrom(msg.sender, klimadao, amount);\\n        require(success, \\\"USDC transfer failed\\\");\\n\\n        _donationIds++;\\n        uint256 donationId = _donationIds;\\n\\n        donations[donationId] = Donation({\\n            donor: msg.sender,\\n            amount: amount,\\n            co2Offset: co2Offset,\\n            timestamp: block.timestamp,\\n            message: message\\n        });\\n\\n        userStats[msg.sender].totalDonated += amount;\\n        userStats[msg.sender].totalCO2Offset += co2Offset;\\n        userStats[msg.sender].donationCount++;\\n\\n        totalDonations += amount;\\n        totalCO2Offset += co2Offset;\\n\\n        emit DonationReceived(msg.sender, amount, co2Offset, message);\\n    }\\n\\n    function getUserStats(address user) external view returns (UserStats memory) {\\n        return userStats[user];\\n    }\\n\\n    function getDonation(uint256 donationId) external view returns (Donation memory) {\\n        require(donationId > 0 && donationId <= _donationIds, \\\"Invalid donation ID\\\");\\n        return donations[donationId];\\n    }\\n\\n    function getTotalDonations() external view returns (uint256) {\\n        return _donationIds;\\n    }\\n}\\n\",\"keccak256\":\"0x9c3039c52b063469b929aa08143fe23777ad27e47f0354f830f9b4cd5ce1610e\",\"license\":\"MIT\"},\"contracts/MockUSDC.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\n/*Frontend tip:\\n    Can make the user experience smoother by:\\n    1. User only input donation amount once (not in both approve() and offset()\\n            Asking the user for the donation amount once,\\n            Then, in your frontend code, call approve(spender, amount) and\\n            offset(amount) with the same value.\\n    2. User nonid to input klimadao_contract address\\n            Hardcode or configure the KlimadaoDonation contract address in your frontend code \\n            (for example, in a config file or as a constant).*/\\n\\n/// @title MockUSDC - Simple ERC20 Token for Testing\\ncontract MockUSDC {\\n    string public name = \\\"Mock USDC\\\";\\n    string public symbol = \\\"mUSDC\\\";\\n    uint8 public decimals = 6;\\n    uint256 public totalSupply;\\n    mapping(address => uint256) public balanceOf;\\n    mapping(address => mapping(address => uint256)) public allowance;\\n\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    constructor(uint256 _initialSupply) {\\n        totalSupply = _initialSupply;\\n        balanceOf[msg.sender] = _initialSupply;\\n        emit Transfer(address(0), msg.sender, _initialSupply);\\n    }\\n\\n    function approve(address spender, uint256 amount) external returns (bool) {\\n        allowance[msg.sender][spender] = amount;\\n        emit Approval(msg.sender, spender, amount);\\n        return true;\\n    }\\n\\n    function transferFrom(address from, address to, uint256 amount) external returns (bool) {\\n        require(balanceOf[from] >= amount, \\\"Insufficient balance\\\");\\n        require(allowance[from][msg.sender] >= amount, \\\"Allowance exceeded\\\");\\n        balanceOf[from] -= amount;\\n        balanceOf[to] += amount;\\n        allowance[from][msg.sender] -= amount;\\n        emit Transfer(from, to, amount);\\n        return true;\\n    }\\n\\n    // Add a transfer function for completeness (optional but standard)\\n    function transfer(address to, uint256 amount) external returns (bool) {\\n        require(balanceOf[msg.sender] >= amount, \\\"Insufficient balance\\\");\\n        balanceOf[msg.sender] -= amount;\\n        balanceOf[to] += amount;\\n        emit Transfer(msg.sender, to, amount);\\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0x3f95b30a63903d81026f041fa8433f3a4bf6b4d3b610f09925f59d9de8f5eb4e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610c42380380610c4283398101604081905261002f9161007c565b600080546001600160a01b039384166001600160a01b031991821617909155600180549290931691161790556100af565b80516001600160a01b038116811461007757600080fd5b919050565b6000806040838503121561008f57600080fd5b61009883610060565b91506100a660208401610060565b90509250929050565b610b84806100be6000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063777c658f11610066578063777c658f146101475780638a65d8741461014f578063de2ed89314610199578063ef07a81f146101a2578063f8626af8146101c257600080fd5b806306a2e1c5146100a357806311eac855146100d3578063436effa9146100e65780634e43603a146100fb57806364583d6b14610130575b600080fd5b6001546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100b6906001600160a01b031681565b6100f96100f436600461078f565b6101e6565b005b61010e610109366004610853565b6104d7565b60408051825181526020808401519082015291810151908201526060016100ca565b61013960035481565b6040519081526020016100ca565b600654610139565b61017e61015d366004610853565b60046020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016100ca565b61013960025481565b6101b56101b0366004610883565b61053d565b6040516100ca91906108e2565b6101d56101d0366004610883565b6106b6565b6040516100ca959493929190610935565b6000831161023b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b600082116102955760405162461bcd60e51b815260206004820152602160248201527f434f32206f6666736574206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610232565b600080546001546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018790529116906323b872dd906064016020604051808303816000875af11580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610973565b90508061035b5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610232565b6006805490600061036b836109ab565b90915550506006546040805160a08101825233815260208082018881528284018881524260608501908152608085018981526000888152600590955295909320845181546001600160a01b0319166001600160a01b039091161781559151600183015551600282015590516003820155915190919060048201906103ef9082610a4d565b50503360009081526004602052604081208054889350909190610413908490610b0d565b9091555050336000908152600460205260408120600101805486929061043a908490610b0d565b909155505033600090815260046020526040812060020180549161045d836109ab565b919050555084600260008282546104749190610b0d565b92505081905550836003600082825461048d9190610b0d565b909155505060405133907ff041a5bfea1be2e3f78bbadfadc66bb6f6d62860e629a44d71bec1ef49411c9e906104c890889088908890610b26565b60405180910390a25050505050565b6104fb60405180606001604052806000815260200160008152602001600081525090565b506001600160a01b0316600090815260046020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b6105786040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b60008211801561058a57506006548211155b6105cc5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908191bdb985d1a5bdb881251606a1b6044820152606401610232565b600082815260056020908152604091829020825160a08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201805491929160808401919061062d906109c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906109c4565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050815250509050919050565b600560205260009081526040902080546001820154600283015460038401546004850180546001600160a01b03909516959394929391926106f6906109c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610722906109c4565b801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b5050505050905085565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156107a457600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156107ca57600080fd5b818601915086601f8301126107de57600080fd5b8135818111156107f0576107f0610779565b604051601f8201601f19908116603f0116810190838211818310171561081857610818610779565b8160405282815289602084870101111561083157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561086557600080fd5b81356001600160a01b038116811461087c57600080fd5b9392505050565b60006020828403121561089557600080fd5b5035919050565b6000815180845260005b818110156108c2576020818501810151868301820152016108a6565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b0382511660208201526020820151604082015260408201516060820152606082015160808201526000608083015160a08084015261092d60c084018261089c565b949350505050565b60018060a01b038616815284602082015283604082015282606082015260a06080820152600061096860a083018461089c565b979650505050505050565b60006020828403121561098557600080fd5b8151801515811461087c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016109bd576109bd610995565b5060010190565b600181811c908216806109d857607f821691505b6020821081036109f857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a4857600081815260208120601f850160051c81016020861015610a255750805b601f850160051c820191505b81811015610a4457828155600101610a31565b5050505b505050565b815167ffffffffffffffff811115610a6757610a67610779565b610a7b81610a7584546109c4565b846109fe565b602080601f831160018114610ab05760008415610a985750858301515b600019600386901b1c1916600185901b178555610a44565b600085815260208120601f198616915b82811015610adf57888601518255948401946001909101908401610ac0565b5085821015610afd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610b2057610b20610995565b92915050565b838152826020820152606060408201526000610b45606083018461089c565b9594505050505056fea2646970667358221220d7b5087fdf69e5b1bb6b1af8edfa1d686da95f73623bd8a2a1e32ff4ef15500864736f6c63430008140033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063777c658f11610066578063777c658f146101475780638a65d8741461014f578063de2ed89314610199578063ef07a81f146101a2578063f8626af8146101c257600080fd5b806306a2e1c5146100a357806311eac855146100d3578063436effa9146100e65780634e43603a146100fb57806364583d6b14610130575b600080fd5b6001546100b6906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100b6906001600160a01b031681565b6100f96100f436600461078f565b6101e6565b005b61010e610109366004610853565b6104d7565b60408051825181526020808401519082015291810151908201526060016100ca565b61013960035481565b6040519081526020016100ca565b600654610139565b61017e61015d366004610853565b60046020526000908152604090208054600182015460029092015490919083565b604080519384526020840192909252908201526060016100ca565b61013960025481565b6101b56101b0366004610883565b61053d565b6040516100ca91906108e2565b6101d56101d0366004610883565b6106b6565b6040516100ca959493929190610935565b6000831161023b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e203000000060448201526064015b60405180910390fd5b600082116102955760405162461bcd60e51b815260206004820152602160248201527f434f32206f6666736574206d7573742062652067726561746572207468616e206044820152600360fc1b6064820152608401610232565b600080546001546040516323b872dd60e01b81523360048201526001600160a01b039182166024820152604481018790529116906323b872dd906064016020604051808303816000875af11580156102f1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103159190610973565b90508061035b5760405162461bcd60e51b81526020600482015260146024820152731554d110c81d1c985b9cd9995c8819985a5b195960621b6044820152606401610232565b6006805490600061036b836109ab565b90915550506006546040805160a08101825233815260208082018881528284018881524260608501908152608085018981526000888152600590955295909320845181546001600160a01b0319166001600160a01b039091161781559151600183015551600282015590516003820155915190919060048201906103ef9082610a4d565b50503360009081526004602052604081208054889350909190610413908490610b0d565b9091555050336000908152600460205260408120600101805486929061043a908490610b0d565b909155505033600090815260046020526040812060020180549161045d836109ab565b919050555084600260008282546104749190610b0d565b92505081905550836003600082825461048d9190610b0d565b909155505060405133907ff041a5bfea1be2e3f78bbadfadc66bb6f6d62860e629a44d71bec1ef49411c9e906104c890889088908890610b26565b60405180910390a25050505050565b6104fb60405180606001604052806000815260200160008152602001600081525090565b506001600160a01b0316600090815260046020908152604091829020825160608101845281548152600182015492810192909252600201549181019190915290565b6105786040518060a0016040528060006001600160a01b03168152602001600081526020016000815260200160008152602001606081525090565b60008211801561058a57506006548211155b6105cc5760405162461bcd60e51b8152602060048201526013602482015272125b9d985b1a5908191bdb985d1a5bdb881251606a1b6044820152606401610232565b600082815260056020908152604091829020825160a08101845281546001600160a01b031681526001820154928101929092526002810154928201929092526003820154606082015260048201805491929160808401919061062d906109c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610659906109c4565b80156106a65780601f1061067b576101008083540402835291602001916106a6565b820191906000526020600020905b81548152906001019060200180831161068957829003601f168201915b5050505050815250509050919050565b600560205260009081526040902080546001820154600283015460038401546004850180546001600160a01b03909516959394929391926106f6906109c4565b80601f0160208091040260200160405190810160405280929190818152602001828054610722906109c4565b801561076f5780601f106107445761010080835404028352916020019161076f565b820191906000526020600020905b81548152906001019060200180831161075257829003601f168201915b5050505050905085565b634e487b7160e01b600052604160045260246000fd5b6000806000606084860312156107a457600080fd5b8335925060208401359150604084013567ffffffffffffffff808211156107ca57600080fd5b818601915086601f8301126107de57600080fd5b8135818111156107f0576107f0610779565b604051601f8201601f19908116603f0116810190838211818310171561081857610818610779565b8160405282815289602084870101111561083157600080fd5b8260208601602083013760006020848301015280955050505050509250925092565b60006020828403121561086557600080fd5b81356001600160a01b038116811461087c57600080fd5b9392505050565b60006020828403121561089557600080fd5b5035919050565b6000815180845260005b818110156108c2576020818501810151868301820152016108a6565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260018060a01b0382511660208201526020820151604082015260408201516060820152606082015160808201526000608083015160a08084015261092d60c084018261089c565b949350505050565b60018060a01b038616815284602082015283604082015282606082015260a06080820152600061096860a083018461089c565b979650505050505050565b60006020828403121561098557600080fd5b8151801515811461087c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016109bd576109bd610995565b5060010190565b600181811c908216806109d857607f821691505b6020821081036109f857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115610a4857600081815260208120601f850160051c81016020861015610a255750805b601f850160051c820191505b81811015610a4457828155600101610a31565b5050505b505050565b815167ffffffffffffffff811115610a6757610a67610779565b610a7b81610a7584546109c4565b846109fe565b602080601f831160018114610ab05760008415610a985750858301515b600019600386901b1c1916600185901b178555610a44565b600085815260208120601f198616915b82811015610adf57888601518255948401946001909101908401610ac0565b5085821015610afd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b80820180821115610b2057610b20610995565b92915050565b838152826020820152606060408201526000610b45606083018461089c565b9594505050505056fea2646970667358221220d7b5087fdf69e5b1bb6b1af8edfa1d686da95f73623bd8a2a1e32ff4ef15500864736f6c63430008140033",
  "devdoc": {
    "details": "Manages carbon offset donations and tracking",
    "kind": "dev",
    "methods": {},
    "title": "EcoQuestDonation",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4834,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "usdcToken",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(MockUSDC)5668"
      },
      {
        "astId": 4836,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "klimadao",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 4838,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "totalDonations",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 4840,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "totalCO2Offset",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 4873,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "userStats",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(UserStats)4858_storage)"
      },
      {
        "astId": 4878,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "donations",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(Donation)4851_storage)"
      },
      {
        "astId": 4880,
        "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
        "label": "_donationIds",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(MockUSDC)5668": {
        "encoding": "inplace",
        "label": "contract MockUSDC",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(UserStats)4858_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct EcoQuestDonation.UserStats)",
        "numberOfBytes": "32",
        "value": "t_struct(UserStats)4858_storage"
      },
      "t_mapping(t_uint256,t_struct(Donation)4851_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct EcoQuestDonation.Donation)",
        "numberOfBytes": "32",
        "value": "t_struct(Donation)4851_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Donation)4851_storage": {
        "encoding": "inplace",
        "label": "struct EcoQuestDonation.Donation",
        "members": [
          {
            "astId": 4842,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "donor",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 4844,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "amount",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4846,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "co2Offset",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 4848,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "timestamp",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 4850,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "message",
            "offset": 0,
            "slot": "4",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(UserStats)4858_storage": {
        "encoding": "inplace",
        "label": "struct EcoQuestDonation.UserStats",
        "members": [
          {
            "astId": 4853,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "totalDonated",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 4855,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "totalCO2Offset",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 4857,
            "contract": "contracts/EcoQuestDonation.sol:EcoQuestDonation",
            "label": "donationCount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}